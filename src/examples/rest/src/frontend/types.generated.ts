/* eslint-disable */
/* 
* This file is auto-generated by Graphweaver. 
* Please do not edit it directly.
*/
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type AdminUiEntityAttributeMetadata = {
  __typename?: 'AdminUiEntityAttributeMetadata';
  exportPageSize?: Maybe<Scalars['Float']['output']>;
  isReadOnly?: Maybe<Scalars['Boolean']['output']>;
};

export type AdminUiEntityMetadata = {
  __typename?: 'AdminUiEntityMetadata';
  attributes: AdminUiEntityAttributeMetadata;
  backendId?: Maybe<Scalars['String']['output']>;
  defaultFilter?: Maybe<Scalars['JSON']['output']>;
  defaultSort?: Maybe<Scalars['JSON']['output']>;
  excludeFromTracing: Scalars['Boolean']['output'];
  fieldForDetailPanelNavigationId: Scalars['String']['output'];
  fields: Array<AdminUiFieldMetadata>;
  hideInSideBar: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  plural: Scalars['String']['output'];
  primaryKeyField: Scalars['String']['output'];
  summaryField?: Maybe<Scalars['String']['output']>;
  supportedAggregationTypes: Array<AggregationType>;
};

export type AdminUiEnumMetadata = {
  __typename?: 'AdminUiEnumMetadata';
  name: Scalars['String']['output'];
  values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
  __typename?: 'AdminUiEnumValueMetadata';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AdminUiFieldAttributeMetadata = {
  __typename?: 'AdminUiFieldAttributeMetadata';
  isReadOnly: Scalars['Boolean']['output'];
  isRequired: Scalars['Boolean']['output'];
};

export type AdminUiFieldExtensionsMetadata = {
  __typename?: 'AdminUiFieldExtensionsMetadata';
  key?: Maybe<Scalars['String']['output']>;
};

export type AdminUiFieldMetadata = {
  __typename?: 'AdminUiFieldMetadata';
  attributes?: Maybe<AdminUiFieldAttributeMetadata>;
  extensions?: Maybe<AdminUiFieldExtensionsMetadata>;
  filter?: Maybe<AdminUiFilterMetadata>;
  hideInDetailForm?: Maybe<Scalars['Boolean']['output']>;
  hideInFilterBar?: Maybe<Scalars['Boolean']['output']>;
  hideInTable?: Maybe<Scalars['Boolean']['output']>;
  isArray?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  relatedEntity?: Maybe<Scalars['String']['output']>;
  relationshipType?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
  __typename?: 'AdminUiFilterMetadata';
  type: AdminUiFilterType;
};

export enum AdminUiFilterType {
  Boolean = 'BOOLEAN',
  DateRange = 'DATE_RANGE',
  Enum = 'ENUM',
  Numeric = 'NUMERIC',
  Relationship = 'RELATIONSHIP',
  Text = 'TEXT'
}

export type AdminUiMetadata = {
  __typename?: 'AdminUiMetadata';
  entities: Array<AdminUiEntityMetadata>;
  enums: Array<AdminUiEnumMetadata>;
};

export type AggregationResult = {
  __typename?: 'AggregationResult';
  count: Scalars['Int']['output'];
};

export enum AggregationType {
  Count = 'COUNT'
}

export type DeleteOneFilterInput = {
  id: Scalars['ID']['input'];
};

export type PeopleListFilter = {
  birth_year?: InputMaybe<Scalars['String']['input']>;
  birth_year_gt?: InputMaybe<Scalars['String']['input']>;
  birth_year_gte?: InputMaybe<Scalars['String']['input']>;
  birth_year_ilike?: InputMaybe<Scalars['String']['input']>;
  birth_year_in?: InputMaybe<Array<Scalars['String']['input']>>;
  birth_year_like?: InputMaybe<Scalars['String']['input']>;
  birth_year_lt?: InputMaybe<Scalars['String']['input']>;
  birth_year_lte?: InputMaybe<Scalars['String']['input']>;
  birth_year_ne?: InputMaybe<Scalars['String']['input']>;
  birth_year_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  birth_year_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  birth_year_null?: InputMaybe<Scalars['Boolean']['input']>;
  hair_color?: InputMaybe<Scalars['String']['input']>;
  hair_color_gt?: InputMaybe<Scalars['String']['input']>;
  hair_color_gte?: InputMaybe<Scalars['String']['input']>;
  hair_color_ilike?: InputMaybe<Scalars['String']['input']>;
  hair_color_in?: InputMaybe<Array<Scalars['String']['input']>>;
  hair_color_like?: InputMaybe<Scalars['String']['input']>;
  hair_color_lt?: InputMaybe<Scalars['String']['input']>;
  hair_color_lte?: InputMaybe<Scalars['String']['input']>;
  hair_color_ne?: InputMaybe<Scalars['String']['input']>;
  hair_color_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  hair_color_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  hair_color_null?: InputMaybe<Scalars['Boolean']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  height_gt?: InputMaybe<Scalars['String']['input']>;
  height_gte?: InputMaybe<Scalars['String']['input']>;
  height_ilike?: InputMaybe<Scalars['String']['input']>;
  height_in?: InputMaybe<Array<Scalars['String']['input']>>;
  height_like?: InputMaybe<Scalars['String']['input']>;
  height_lt?: InputMaybe<Scalars['String']['input']>;
  height_lte?: InputMaybe<Scalars['String']['input']>;
  height_ne?: InputMaybe<Scalars['String']['input']>;
  height_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  height_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  height_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_gt?: InputMaybe<Scalars['ID']['input']>;
  id_gte?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_lt?: InputMaybe<Scalars['ID']['input']>;
  id_lte?: InputMaybe<Scalars['ID']['input']>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  mass?: InputMaybe<Scalars['String']['input']>;
  mass_gt?: InputMaybe<Scalars['String']['input']>;
  mass_gte?: InputMaybe<Scalars['String']['input']>;
  mass_ilike?: InputMaybe<Scalars['String']['input']>;
  mass_in?: InputMaybe<Array<Scalars['String']['input']>>;
  mass_like?: InputMaybe<Scalars['String']['input']>;
  mass_lt?: InputMaybe<Scalars['String']['input']>;
  mass_lte?: InputMaybe<Scalars['String']['input']>;
  mass_ne?: InputMaybe<Scalars['String']['input']>;
  mass_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  mass_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  mass_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_gt?: InputMaybe<Scalars['String']['input']>;
  name_gte?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_lt?: InputMaybe<Scalars['String']['input']>;
  name_lte?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
  vehicles?: InputMaybe<VehiclesListFilter>;
};

export type PeopleOrderByInput = {
  birth_year?: InputMaybe<Sort>;
  hair_color?: InputMaybe<Sort>;
  height?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  mass?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
};

/** Pagination options for People. */
export type PeoplePaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PeopleOrderByInput>;
};

export type Person = {
  __typename?: 'Person';
  birth_year: Scalars['String']['output'];
  hair_color: Scalars['String']['output'];
  height: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  mass: Scalars['String']['output'];
  name: Scalars['String']['output'];
  vehicles?: Maybe<Array<Vehicle>>;
};

export type Query = {
  __typename?: 'Query';
  /** Query used by the Admin UI to introspect the schema and metadata. */
  _graphweaver?: Maybe<AdminUiMetadata>;
  /** Get multiple People. */
  people?: Maybe<Array<Maybe<Person>>>;
  /** Get a single Person. */
  person?: Maybe<Person>;
  /** Get a single Vehicle. */
  vehicle?: Maybe<Vehicle>;
  /** Get multiple Vehicles. */
  vehicles?: Maybe<Array<Maybe<Vehicle>>>;
};


export type QueryPeopleArgs = {
  filter?: InputMaybe<PeopleListFilter>;
  pagination?: InputMaybe<PeoplePaginationInput>;
};


export type QueryPersonArgs = {
  id: Scalars['ID']['input'];
};


export type QueryVehicleArgs = {
  id: Scalars['ID']['input'];
};


export type QueryVehiclesArgs = {
  filter?: InputMaybe<VehiclesListFilter>;
  pagination?: InputMaybe<VehiclesPaginationInput>;
};

export enum Sort {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Vehicle = {
  __typename?: 'Vehicle';
  costInCredits: Scalars['String']['output'];
  crew: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  length: Scalars['String']['output'];
  manufacturer: Scalars['String']['output'];
  model: Scalars['String']['output'];
  name: Scalars['String']['output'];
  passengers: Scalars['String']['output'];
  pilots: Array<Person>;
};

export type VehiclesListFilter = {
  costInCredits?: InputMaybe<Scalars['String']['input']>;
  costInCredits_gt?: InputMaybe<Scalars['String']['input']>;
  costInCredits_gte?: InputMaybe<Scalars['String']['input']>;
  costInCredits_ilike?: InputMaybe<Scalars['String']['input']>;
  costInCredits_in?: InputMaybe<Array<Scalars['String']['input']>>;
  costInCredits_like?: InputMaybe<Scalars['String']['input']>;
  costInCredits_lt?: InputMaybe<Scalars['String']['input']>;
  costInCredits_lte?: InputMaybe<Scalars['String']['input']>;
  costInCredits_ne?: InputMaybe<Scalars['String']['input']>;
  costInCredits_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  costInCredits_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  costInCredits_null?: InputMaybe<Scalars['Boolean']['input']>;
  crew?: InputMaybe<Scalars['String']['input']>;
  crew_gt?: InputMaybe<Scalars['String']['input']>;
  crew_gte?: InputMaybe<Scalars['String']['input']>;
  crew_ilike?: InputMaybe<Scalars['String']['input']>;
  crew_in?: InputMaybe<Array<Scalars['String']['input']>>;
  crew_like?: InputMaybe<Scalars['String']['input']>;
  crew_lt?: InputMaybe<Scalars['String']['input']>;
  crew_lte?: InputMaybe<Scalars['String']['input']>;
  crew_ne?: InputMaybe<Scalars['String']['input']>;
  crew_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  crew_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  crew_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_gt?: InputMaybe<Scalars['ID']['input']>;
  id_gte?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_lt?: InputMaybe<Scalars['ID']['input']>;
  id_lte?: InputMaybe<Scalars['ID']['input']>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  length?: InputMaybe<Scalars['String']['input']>;
  length_gt?: InputMaybe<Scalars['String']['input']>;
  length_gte?: InputMaybe<Scalars['String']['input']>;
  length_ilike?: InputMaybe<Scalars['String']['input']>;
  length_in?: InputMaybe<Array<Scalars['String']['input']>>;
  length_like?: InputMaybe<Scalars['String']['input']>;
  length_lt?: InputMaybe<Scalars['String']['input']>;
  length_lte?: InputMaybe<Scalars['String']['input']>;
  length_ne?: InputMaybe<Scalars['String']['input']>;
  length_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  length_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  length_null?: InputMaybe<Scalars['Boolean']['input']>;
  manufacturer?: InputMaybe<Scalars['String']['input']>;
  manufacturer_gt?: InputMaybe<Scalars['String']['input']>;
  manufacturer_gte?: InputMaybe<Scalars['String']['input']>;
  manufacturer_ilike?: InputMaybe<Scalars['String']['input']>;
  manufacturer_in?: InputMaybe<Array<Scalars['String']['input']>>;
  manufacturer_like?: InputMaybe<Scalars['String']['input']>;
  manufacturer_lt?: InputMaybe<Scalars['String']['input']>;
  manufacturer_lte?: InputMaybe<Scalars['String']['input']>;
  manufacturer_ne?: InputMaybe<Scalars['String']['input']>;
  manufacturer_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  manufacturer_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  manufacturer_null?: InputMaybe<Scalars['Boolean']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  model_gt?: InputMaybe<Scalars['String']['input']>;
  model_gte?: InputMaybe<Scalars['String']['input']>;
  model_ilike?: InputMaybe<Scalars['String']['input']>;
  model_in?: InputMaybe<Array<Scalars['String']['input']>>;
  model_like?: InputMaybe<Scalars['String']['input']>;
  model_lt?: InputMaybe<Scalars['String']['input']>;
  model_lte?: InputMaybe<Scalars['String']['input']>;
  model_ne?: InputMaybe<Scalars['String']['input']>;
  model_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  model_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  model_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_gt?: InputMaybe<Scalars['String']['input']>;
  name_gte?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_lt?: InputMaybe<Scalars['String']['input']>;
  name_lte?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
  passengers?: InputMaybe<Scalars['String']['input']>;
  passengers_gt?: InputMaybe<Scalars['String']['input']>;
  passengers_gte?: InputMaybe<Scalars['String']['input']>;
  passengers_ilike?: InputMaybe<Scalars['String']['input']>;
  passengers_in?: InputMaybe<Array<Scalars['String']['input']>>;
  passengers_like?: InputMaybe<Scalars['String']['input']>;
  passengers_lt?: InputMaybe<Scalars['String']['input']>;
  passengers_lte?: InputMaybe<Scalars['String']['input']>;
  passengers_ne?: InputMaybe<Scalars['String']['input']>;
  passengers_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  passengers_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  passengers_null?: InputMaybe<Scalars['Boolean']['input']>;
  pilots?: InputMaybe<PeopleListFilter>;
};

export type VehiclesOrderByInput = {
  costInCredits?: InputMaybe<Sort>;
  crew?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  length?: InputMaybe<Sort>;
  manufacturer?: InputMaybe<Sort>;
  model?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
  passengers?: InputMaybe<Sort>;
};

/** Pagination options for Vehicles. */
export type VehiclesPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<VehiclesOrderByInput>;
};
