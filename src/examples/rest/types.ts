/* eslint-disable */
/* 
* This file is auto-generated by Graphweaver. 
* Please do not edit it directly.
*/
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** Returns a string in simplified extended ISO format (ISO 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or Â±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset, as denoted by the suffix "Z". */
  ISOString: { input: any; output: any; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type AdminUiEntityAttributeMetadata = {
  __typename?: 'AdminUiEntityAttributeMetadata';
  exportPageSize?: Maybe<Scalars['Float']['output']>;
  isReadOnly?: Maybe<Scalars['Boolean']['output']>;
};

export type AdminUiEntityMetadata = {
  __typename?: 'AdminUiEntityMetadata';
  attributes: AdminUiEntityAttributeMetadata;
  backendId?: Maybe<Scalars['String']['output']>;
  defaultFilter?: Maybe<Scalars['JSON']['output']>;
  fields: Array<AdminUiFieldMetadata>;
  name: Scalars['String']['output'];
  plural: Scalars['String']['output'];
  summaryField?: Maybe<Scalars['String']['output']>;
};

export type AdminUiEnumMetadata = {
  __typename?: 'AdminUiEnumMetadata';
  name: Scalars['String']['output'];
  values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
  __typename?: 'AdminUiEnumValueMetadata';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AdminUiFieldAttributeMetadata = {
  __typename?: 'AdminUiFieldAttributeMetadata';
  isReadOnly: Scalars['Boolean']['output'];
  isRequired: Scalars['Boolean']['output'];
};

export type AdminUiFieldExtensionsMetadata = {
  __typename?: 'AdminUiFieldExtensionsMetadata';
  key?: Maybe<Scalars['String']['output']>;
};

export type AdminUiFieldMetadata = {
  __typename?: 'AdminUiFieldMetadata';
  attributes?: Maybe<AdminUiFieldAttributeMetadata>;
  extensions?: Maybe<AdminUiFieldExtensionsMetadata>;
  filter?: Maybe<AdminUiFilterMetadata>;
  isArray?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  relatedEntity?: Maybe<Scalars['String']['output']>;
  relationshipType?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
  __typename?: 'AdminUiFilterMetadata';
  type: AdminUiFilterType;
};

export enum AdminUiFilterType {
  Boolean = 'BOOLEAN',
  DateRange = 'DATE_RANGE',
  Enum = 'ENUM',
  Numeric = 'NUMERIC',
  Relationship = 'RELATIONSHIP',
  Text = 'TEXT'
}

export type AdminUiMetadata = {
  __typename?: 'AdminUiMetadata';
  entities: Array<AdminUiEntityMetadata>;
  enums: Array<AdminUiEnumMetadata>;
};

export type Authentication = {
  __typename?: 'Authentication';
  createdAt: Scalars['ISOString']['output'];
  data: Scalars['JSON']['output'];
  id: Scalars['ID']['output'];
  type: Scalars['String']['output'];
  userId: Scalars['ID']['output'];
};

/** Data needed to create Authentications. */
export type AuthenticationInsertInput = {
  createdAt?: InputMaybe<Scalars['ISOString']['input']>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['ID']['input']>;
};

export type AuthenticationsListFilter = {
  createdAt?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_gt?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_gte?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
  createdAt_lt?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_lte?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_ne?: InputMaybe<Scalars['ISOString']['input']>;
  createdAt_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
  createdAt_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt_null?: InputMaybe<Scalars['Boolean']['input']>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  data_in?: InputMaybe<Array<Scalars['JSON']['input']>>;
  data_ne?: InputMaybe<Scalars['JSON']['input']>;
  data_nin?: InputMaybe<Array<Scalars['JSON']['input']>>;
  data_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  data_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_ilike?: InputMaybe<Scalars['String']['input']>;
  type_in?: InputMaybe<Array<Scalars['String']['input']>>;
  type_like?: InputMaybe<Scalars['String']['input']>;
  type_ne?: InputMaybe<Scalars['String']['input']>;
  type_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  type_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  type_null?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['ID']['input']>;
  userId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  userId_ne?: InputMaybe<Scalars['ID']['input']>;
  userId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  userId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  userId_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AuthenticationsOrderByInput = {
  createdAt?: InputMaybe<Sort>;
  data?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  type?: InputMaybe<Sort>;
  userId?: InputMaybe<Sort>;
};

/** Pagination options for Authentications. */
export type AuthenticationsPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AuthenticationsOrderByInput>;
};

export type Credential = {
  __typename?: 'Credential';
  id: Scalars['ID']['output'];
  username: Scalars['String']['output'];
};

export type CredentialsOrderByInput = {
  id?: InputMaybe<Sort>;
  username?: InputMaybe<Sort>;
};

/** Pagination options for Credentials. */
export type CredentialsPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<CredentialsOrderByInput>;
};

export type MultipleAdminUiEntityAttributeMetadataOrderByInput = {
  exportPageSize?: InputMaybe<Sort>;
  isReadOnly?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiEntityAttributeMetadata. */
export type MultipleAdminUiEntityAttributeMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiEntityAttributeMetadataOrderByInput>;
};

export type MultipleAdminUiEntityMetadataOrderByInput = {
  backendId?: InputMaybe<Sort>;
  defaultFilter?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
  plural?: InputMaybe<Sort>;
  summaryField?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiEntityMetadata. */
export type MultipleAdminUiEntityMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiEntityMetadataOrderByInput>;
};

export type MultipleAdminUiEnumMetadataOrderByInput = {
  name?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiEnumMetadata. */
export type MultipleAdminUiEnumMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiEnumMetadataOrderByInput>;
};

export type MultipleAdminUiEnumValueMetadataOrderByInput = {
  name?: InputMaybe<Sort>;
  value?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiEnumValueMetadata. */
export type MultipleAdminUiEnumValueMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiEnumValueMetadataOrderByInput>;
};

export type MultipleAdminUiFieldAttributeMetadataOrderByInput = {
  isReadOnly?: InputMaybe<Sort>;
  isRequired?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiFieldAttributeMetadata. */
export type MultipleAdminUiFieldAttributeMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiFieldAttributeMetadataOrderByInput>;
};

export type MultipleAdminUiFieldExtensionsMetadataOrderByInput = {
  key?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiFieldExtensionsMetadata. */
export type MultipleAdminUiFieldExtensionsMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiFieldExtensionsMetadataOrderByInput>;
};

export type MultipleAdminUiFieldMetadataOrderByInput = {
  isArray?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
  relatedEntity?: InputMaybe<Sort>;
  relationshipType?: InputMaybe<Sort>;
  type?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiFieldMetadata. */
export type MultipleAdminUiFieldMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiFieldMetadataOrderByInput>;
};

export type MultipleAdminUiFilterMetadataOrderByInput = {
  type?: InputMaybe<Sort>;
};

/** Pagination options for MultipleAdminUiFilterMetadata. */
export type MultipleAdminUiFilterMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MultipleAdminUiFilterMetadataOrderByInput>;
};

/** Pagination options for MultipleAdminUiMetadata. */
export type MultipleAdminUiMetadataPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  challengePassword?: Maybe<Scalars['Boolean']['output']>;
  /** Create a single Authentication. */
  createAuthentication?: Maybe<Authentication>;
  createCredential?: Maybe<Scalars['Boolean']['output']>;
  /** Create a single Tag. */
  createTag?: Maybe<Tag>;
  /** Create a single Task. */
  createTask?: Maybe<Task>;
  /** Create a single Token. */
  createToken?: Maybe<Token>;
  /** Create a single User. */
  createUser?: Maybe<User>;
  loginPassword?: Maybe<Token>;
  sendOTPChallenge?: Maybe<Scalars['Boolean']['output']>;
  updateCredential?: Maybe<Scalars['Boolean']['output']>;
  verifyOTPChallenge?: Maybe<Scalars['Boolean']['output']>;
};


export type MutationCreateAuthenticationArgs = {
  data: AuthenticationInsertInput;
};


export type MutationCreateTagArgs = {
  data: TagInsertInput;
};


export type MutationCreateTaskArgs = {
  data: TaskInsertInput;
};


export type MutationCreateTokenArgs = {
  data: TokenInsertInput;
};


export type MutationCreateUserArgs = {
  data: UserInsertInput;
};


export type MutationLoginPasswordArgs = {
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export enum Priority {
  High = 'HIGH',
  Low = 'LOW',
  Medium = 'MEDIUM'
}

export type Query = {
  __typename?: 'Query';
  /** Query used by the Admin UI to introspect the schema and metadata. */
  _graphweaver?: Maybe<AdminUiMetadata>;
  /** Get a single Authentication. */
  authentication?: Maybe<Authentication>;
  /** Get multiple Authentications. */
  authentications?: Maybe<Array<Maybe<Authentication>>>;
  /** Get a single Tag. */
  tag?: Maybe<Tag>;
  /** Get multiple Tags. */
  tags?: Maybe<Array<Maybe<Tag>>>;
  /** Get a single Task. */
  task?: Maybe<Task>;
  /** Get multiple Tasks. */
  tasks?: Maybe<Array<Maybe<Task>>>;
  /** Get a single Token. */
  token?: Maybe<Token>;
  /** Get multiple Tokens. */
  tokens?: Maybe<Array<Maybe<Token>>>;
  /** Get a single User. */
  user?: Maybe<User>;
  /** Get multiple Users. */
  users?: Maybe<Array<Maybe<User>>>;
};


export type QueryAuthenticationArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAuthenticationsArgs = {
  filter?: InputMaybe<AuthenticationsListFilter>;
  pagination?: InputMaybe<AuthenticationsPaginationInput>;
};


export type QueryTagArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTagsArgs = {
  filter?: InputMaybe<TagsListFilter>;
  pagination?: InputMaybe<TagsPaginationInput>;
};


export type QueryTaskArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTasksArgs = {
  filter?: InputMaybe<TasksListFilter>;
  pagination?: InputMaybe<TasksPaginationInput>;
};


export type QueryTokenArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTokensArgs = {
  filter?: InputMaybe<TokensListFilter>;
  pagination?: InputMaybe<TokensPaginationInput>;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};


export type QueryUsersArgs = {
  filter?: InputMaybe<UsersListFilter>;
  pagination?: InputMaybe<UsersPaginationInput>;
};

export enum Sort {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Tag = {
  __typename?: 'Tag';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  tasks: Array<Task>;
};

/** Data needed to create Tags. */
export type TagInsertInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  tasks?: InputMaybe<TaskInsertInput>;
};

export type TagsListFilter = {
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
  tasks?: InputMaybe<TasksListFilter>;
};

export type TagsOrderByInput = {
  id?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
};

/** Pagination options for Tags. */
export type TagsPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TagsOrderByInput>;
};

export type Task = {
  __typename?: 'Task';
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  isCompleted: Scalars['Boolean']['output'];
  priority?: Maybe<Priority>;
  slug?: Maybe<Scalars['String']['output']>;
  tags: Array<Tag>;
  user: User;
};

/** Data needed to create Tasks. */
export type TaskInsertInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  priority?: InputMaybe<Priority>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<TagInsertInput>;
  user?: InputMaybe<UserInsertInput>;
};

export type TasksListFilter = {
  description?: InputMaybe<Scalars['String']['input']>;
  description_ilike?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_like?: InputMaybe<Scalars['String']['input']>;
  description_ne?: InputMaybe<Scalars['String']['input']>;
  description_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  description_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  description_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isCompleted_ne?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted_nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isCompleted_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted_null?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  slug_ilike?: InputMaybe<Scalars['String']['input']>;
  slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_like?: InputMaybe<Scalars['String']['input']>;
  slug_ne?: InputMaybe<Scalars['String']['input']>;
  slug_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  slug_null?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<TagsListFilter>;
  user?: InputMaybe<UsersListFilter>;
};

export type TasksOrderByInput = {
  description?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  isCompleted?: InputMaybe<Sort>;
  priority?: InputMaybe<Sort>;
  slug?: InputMaybe<Sort>;
};

/** Pagination options for Tasks. */
export type TasksPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TasksOrderByInput>;
};

export type Token = {
  __typename?: 'Token';
  authToken: Scalars['String']['output'];
};

/** Data needed to create Tokens. */
export type TokenInsertInput = {
  authToken?: InputMaybe<Scalars['String']['input']>;
};

export type TokensListFilter = {
  authToken?: InputMaybe<Scalars['String']['input']>;
  authToken_ilike?: InputMaybe<Scalars['String']['input']>;
  authToken_in?: InputMaybe<Array<Scalars['String']['input']>>;
  authToken_like?: InputMaybe<Scalars['String']['input']>;
  authToken_ne?: InputMaybe<Scalars['String']['input']>;
  authToken_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  authToken_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  authToken_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TokensOrderByInput = {
  authToken?: InputMaybe<Sort>;
};

/** Pagination options for Tokens. */
export type TokensPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokensOrderByInput>;
};

export type User = {
  __typename?: 'User';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

/** Data needed to create Users. */
export type UserInsertInput = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UsersListFilter = {
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UsersOrderByInput = {
  id?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
};

/** Pagination options for Users. */
export type UsersPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UsersOrderByInput>;
};
