/* eslint-disable */
/* 
* This file is auto-generated by Graphweaver. 
* Please do not edit it directly.
*/
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  JSON: { input: any; output: any; }
};

export type AdminUiEntityAttributeMetadata = {
  __typename?: 'AdminUiEntityAttributeMetadata';
  isReadOnly?: Maybe<Scalars['Boolean']['output']>;
};

export type AdminUiEntityMetadata = {
  __typename?: 'AdminUiEntityMetadata';
  attributes: AdminUiEntityAttributeMetadata;
  backendId?: Maybe<Scalars['String']['output']>;
  fields: Array<AdminUiFieldMetadata>;
  name: Scalars['String']['output'];
  summaryField?: Maybe<Scalars['String']['output']>;
};

export type AdminUiEnumMetadata = {
  __typename?: 'AdminUiEnumMetadata';
  name: Scalars['String']['output'];
  values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
  __typename?: 'AdminUiEnumValueMetadata';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AdminUiFieldAttributeMetadata = {
  __typename?: 'AdminUiFieldAttributeMetadata';
  isReadOnly?: Maybe<Scalars['Boolean']['output']>;
};

export type AdminUiFieldMetadata = {
  __typename?: 'AdminUiFieldMetadata';
  attributes?: Maybe<AdminUiFieldAttributeMetadata>;
  filter?: Maybe<AdminUiFilterMetadata>;
  name: Scalars['String']['output'];
  relatedEntity?: Maybe<Scalars['String']['output']>;
  relationshipType?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
  __typename?: 'AdminUiFilterMetadata';
  type: AdminUiFilterType;
};

export enum AdminUiFilterType {
  Boolean = 'BOOLEAN',
  DateRange = 'DATE_RANGE',
  Enum = 'ENUM',
  Numeric = 'NUMERIC',
  Relationship = 'RELATIONSHIP',
  Text = 'TEXT'
}

export type AdminUiMetadata = {
  __typename?: 'AdminUiMetadata';
  entities: Array<AdminUiEntityMetadata>;
  enums: Array<AdminUiEnumMetadata>;
};

export type Mutation = {
  __typename?: 'Mutation';
  challengePassword: Token;
  createLoginPassword: Token;
  createOrUpdateTags: Array<Tag>;
  createOrUpdateTasks: Array<Task>;
  createOrUpdateUsers: Array<User>;
  createTag: Tag;
  createTags: Array<Tag>;
  createTask: Task;
  createTasks: Array<Task>;
  createUser: User;
  createUsers: Array<User>;
  deleteTag: Scalars['Boolean']['output'];
  deleteTask: Scalars['Boolean']['output'];
  deleteUser: Scalars['Boolean']['output'];
  enrolWallet: Scalars['Boolean']['output'];
  loginPassword: Token;
  passkeyGenerateAuthenticationOptions: Scalars['JSON']['output'];
  passkeyGenerateRegistrationOptions: Scalars['JSON']['output'];
  passkeyVerifyAuthenticationResponse: Token;
  passkeyVerifyRegistrationResponse: Scalars['Boolean']['output'];
  sendChallengeMagicLink: Scalars['Boolean']['output'];
  sendLoginMagicLink: Scalars['Boolean']['output'];
  sendOTPChallenge: Scalars['Boolean']['output'];
  updateTag: Tag;
  updateTags: Array<Tag>;
  updateTask: Task;
  updateTasks: Array<Task>;
  updateUser: User;
  updateUsers: Array<User>;
  verifyChallengeMagicLink: Token;
  verifyLoginMagicLink: Token;
  verifyOTPChallenge: Token;
  verifyWeb3Challenge: Token;
};

export enum Priority {
  /** HIGH */
  High = 'HIGH',
  /** LOW */
  Low = 'LOW',
  /** MEDIUM */
  Medium = 'MEDIUM'
}

export type Query = {
  __typename?: 'Query';
  _graphweaver: AdminUiMetadata;
  canEnrolWallet: Scalars['Boolean']['output'];
  tag?: Maybe<Tag>;
  tags: Array<Tag>;
  task?: Maybe<Task>;
  tasks: Array<Task>;
  user?: Maybe<User>;
  users: Array<User>;
};

export type Tag = {
  __typename?: 'Tag';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  tasks?: Maybe<Array<Task>>;
};


export type TagTasksArgs = {
  filter?: InputMaybe<TasksListFilter>;
};

export type TagsListFilter = {
  _and?: InputMaybe<Array<TagsListFilter>>;
  _not?: InputMaybe<TagsListFilter>;
  _or?: InputMaybe<Array<TagsListFilter>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['ID']['input']>;
  id_null?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['String']['input']>;
  name_null?: InputMaybe<Scalars['String']['input']>;
  tasks?: InputMaybe<TasksListFilter>;
};

export type Task = {
  __typename?: 'Task';
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  isCompleted: Scalars['Boolean']['output'];
  priority?: Maybe<Priority>;
  slug?: Maybe<Scalars['String']['output']>;
  tags?: Maybe<Array<Tag>>;
  user?: Maybe<User>;
};


export type TaskTagsArgs = {
  filter?: InputMaybe<TagsListFilter>;
};

export type TasksListFilter = {
  _and?: InputMaybe<Array<TasksListFilter>>;
  _not?: InputMaybe<TasksListFilter>;
  _or?: InputMaybe<Array<TasksListFilter>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_ilike?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_like?: InputMaybe<Scalars['String']['input']>;
  description_ne?: InputMaybe<Scalars['String']['input']>;
  description_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  description_notnull?: InputMaybe<Scalars['String']['input']>;
  description_null?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['ID']['input']>;
  id_null?: InputMaybe<Scalars['ID']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  priority?: InputMaybe<Priority>;
  priority_in?: InputMaybe<Array<Priority>>;
  priority_ne?: InputMaybe<Priority>;
  priority_nin?: InputMaybe<Array<Priority>>;
  priority_notnull?: InputMaybe<Priority>;
  priority_null?: InputMaybe<Priority>;
  slug?: InputMaybe<Scalars['String']['input']>;
  slug_ilike?: InputMaybe<Scalars['String']['input']>;
  slug_in?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_like?: InputMaybe<Scalars['String']['input']>;
  slug_ne?: InputMaybe<Scalars['String']['input']>;
  slug_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_notnull?: InputMaybe<Scalars['String']['input']>;
  slug_null?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<UsersListFilter>;
  user?: InputMaybe<UsersListFilter>;
};

export type Token = {
  __typename?: 'Token';
  authToken: Scalars['String']['output'];
};

export type User = {
  __typename?: 'User';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type UsersListFilter = {
  _and?: InputMaybe<Array<UsersListFilter>>;
  _not?: InputMaybe<UsersListFilter>;
  _or?: InputMaybe<Array<UsersListFilter>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['ID']['input']>;
  id_null?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['String']['input']>;
  name_null?: InputMaybe<Scalars['String']['input']>;
};
