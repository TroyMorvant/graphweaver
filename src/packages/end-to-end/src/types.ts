/* eslint-disable */
/*
 * This file is auto-generated by GraphWeaver.
 * Please do not edit it directly.
 */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = {
	[_ in K]?: never;
};
export type Incremental<T> =
	| T
	| { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
	ID: { input: string; output: string };
	String: { input: string; output: string };
	Boolean: { input: boolean; output: boolean };
	Int: { input: number; output: number };
	Float: { input: number; output: number };
	ISOString: { input: any; output: any };
};

export type AdminUiEntityMetadata = {
	__typename?: 'AdminUiEntityMetadata';
	backendId?: Maybe<Scalars['String']['output']>;
	fields: Array<AdminUiFieldMetadata>;
	name: Scalars['String']['output'];
	summaryField?: Maybe<Scalars['String']['output']>;
};

export type AdminUiEnumMetadata = {
	__typename?: 'AdminUiEnumMetadata';
	name: Scalars['String']['output'];
	values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
	__typename?: 'AdminUiEnumValueMetadata';
	name: Scalars['String']['output'];
	value: Scalars['String']['output'];
};

export type AdminUiFieldMetadata = {
	__typename?: 'AdminUiFieldMetadata';
	filter?: Maybe<AdminUiFilterMetadata>;
	name: Scalars['String']['output'];
	relatedEntity?: Maybe<Scalars['String']['output']>;
	relationshipType?: Maybe<Scalars['String']['output']>;
	type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
	__typename?: 'AdminUiFilterMetadata';
	type: AdminUiFilterType;
};

export enum AdminUiFilterType {
	DateRange = 'DATE_RANGE',
	Enum = 'ENUM',
	Numeric = 'NUMERIC',
	Relationship = 'RELATIONSHIP',
	Text = 'TEXT',
}

export type AdminUiMetadata = {
	__typename?: 'AdminUiMetadata';
	entities: Array<AdminUiEntityMetadata>;
	enums: Array<AdminUiEnumMetadata>;
};

export type Album = {
	__typename?: 'Album';
	Artist?: Maybe<Artist>;
	Title: Scalars['String']['output'];
	Tracks?: Maybe<Array<Track>>;
	id: Scalars['ID']['output'];
};

export type AlbumCreateOrUpdateInput = {
	Artist?: InputMaybe<ArtistCreateOrUpdateInput>;
	Title?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type AlbumInsertInput = {
	Artist?: InputMaybe<ArtistCreateOrUpdateInput>;
	Title: Scalars['String']['input'];
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type AlbumsCreateOrUpdateManyInput = {
	data: Array<AlbumCreateOrUpdateInput>;
};

export type AlbumsInsertManyInput = {
	data: Array<AlbumInsertInput>;
};

export type AlbumsListFilter = {
	Artist?: InputMaybe<ArtistsListFilter>;
	Title?: InputMaybe<Scalars['String']['input']>;
	Title_ilike?: InputMaybe<Scalars['String']['input']>;
	Title_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Title_like?: InputMaybe<Scalars['String']['input']>;
	Title_ne?: InputMaybe<Scalars['String']['input']>;
	Title_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Title_notnull?: InputMaybe<Scalars['String']['input']>;
	Title_null?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<TracksListFilter>;
	_and?: InputMaybe<Array<AlbumsListFilter>>;
	_not?: InputMaybe<AlbumsListFilter>;
	_or?: InputMaybe<Array<AlbumsListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type AlbumsOrderByInput = {
	Title?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type AlbumsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<AlbumsOrderByInput>;
};

export type AlbumsUpdateManyInput = {
	data: Array<AlbumCreateOrUpdateInput>;
};

export type Artist = {
	__typename?: 'Artist';
	Albums?: Maybe<Array<Album>>;
	Name?: Maybe<Scalars['String']['output']>;
	id: Scalars['ID']['output'];
};

export type ArtistCreateOrUpdateInput = {
	Albums?: InputMaybe<Array<AlbumCreateOrUpdateInput>>;
	Name?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type ArtistInsertInput = {
	Albums?: InputMaybe<Array<AlbumCreateOrUpdateInput>>;
	Name?: InputMaybe<Scalars['String']['input']>;
};

export type ArtistsCreateOrUpdateManyInput = {
	data: Array<ArtistCreateOrUpdateInput>;
};

export type ArtistsInsertManyInput = {
	data: Array<ArtistInsertInput>;
};

export type ArtistsListFilter = {
	Albums?: InputMaybe<AlbumsListFilter>;
	Name?: InputMaybe<Scalars['String']['input']>;
	Name_ilike?: InputMaybe<Scalars['String']['input']>;
	Name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_like?: InputMaybe<Scalars['String']['input']>;
	Name_ne?: InputMaybe<Scalars['String']['input']>;
	Name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_notnull?: InputMaybe<Scalars['String']['input']>;
	Name_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<ArtistsListFilter>>;
	_not?: InputMaybe<ArtistsListFilter>;
	_or?: InputMaybe<Array<ArtistsListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type ArtistsOrderByInput = {
	Albums?: InputMaybe<Sort>;
	Name?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type ArtistsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<ArtistsOrderByInput>;
};

export type ArtistsUpdateManyInput = {
	data: Array<ArtistCreateOrUpdateInput>;
};

export type Customer = {
	__typename?: 'Customer';
	Address?: Maybe<Scalars['String']['output']>;
	City?: Maybe<Scalars['String']['output']>;
	Company?: Maybe<Scalars['String']['output']>;
	Country?: Maybe<Scalars['String']['output']>;
	Email: Scalars['String']['output'];
	Employee?: Maybe<Employee>;
	Fax?: Maybe<Scalars['String']['output']>;
	FirstName: Scalars['String']['output'];
	Invoices?: Maybe<Array<Invoice>>;
	LastName: Scalars['String']['output'];
	Phone?: Maybe<Scalars['String']['output']>;
	PostalCode?: Maybe<Scalars['String']['output']>;
	State?: Maybe<Scalars['String']['output']>;
	id: Scalars['ID']['output'];
};

export type CustomerCreateOrUpdateInput = {
	Address?: InputMaybe<Scalars['String']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	Company?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Email?: InputMaybe<Scalars['String']['input']>;
	Employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	FirstName?: InputMaybe<Scalars['String']['input']>;
	Invoices?: InputMaybe<Array<InvoiceCreateOrUpdateInput>>;
	LastName?: InputMaybe<Scalars['String']['input']>;
	Phone?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type CustomerInsertInput = {
	Address?: InputMaybe<Scalars['String']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	Company?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Email: Scalars['String']['input'];
	Employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	FirstName: Scalars['String']['input'];
	Invoices?: InputMaybe<Array<InvoiceCreateOrUpdateInput>>;
	LastName: Scalars['String']['input'];
	Phone?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
};

export type CustomersCreateOrUpdateManyInput = {
	data: Array<CustomerCreateOrUpdateInput>;
};

export type CustomersInsertManyInput = {
	data: Array<CustomerInsertInput>;
};

export type CustomersListFilter = {
	Address?: InputMaybe<Scalars['String']['input']>;
	Address_ilike?: InputMaybe<Scalars['String']['input']>;
	Address_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Address_like?: InputMaybe<Scalars['String']['input']>;
	Address_ne?: InputMaybe<Scalars['String']['input']>;
	Address_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Address_notnull?: InputMaybe<Scalars['String']['input']>;
	Address_null?: InputMaybe<Scalars['String']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	City_ilike?: InputMaybe<Scalars['String']['input']>;
	City_in?: InputMaybe<Array<Scalars['String']['input']>>;
	City_like?: InputMaybe<Scalars['String']['input']>;
	City_ne?: InputMaybe<Scalars['String']['input']>;
	City_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	City_notnull?: InputMaybe<Scalars['String']['input']>;
	City_null?: InputMaybe<Scalars['String']['input']>;
	Company?: InputMaybe<Scalars['String']['input']>;
	Company_ilike?: InputMaybe<Scalars['String']['input']>;
	Company_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Company_like?: InputMaybe<Scalars['String']['input']>;
	Company_ne?: InputMaybe<Scalars['String']['input']>;
	Company_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Company_notnull?: InputMaybe<Scalars['String']['input']>;
	Company_null?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Country_ilike?: InputMaybe<Scalars['String']['input']>;
	Country_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Country_like?: InputMaybe<Scalars['String']['input']>;
	Country_ne?: InputMaybe<Scalars['String']['input']>;
	Country_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Country_notnull?: InputMaybe<Scalars['String']['input']>;
	Country_null?: InputMaybe<Scalars['String']['input']>;
	Email?: InputMaybe<Scalars['String']['input']>;
	Email_ilike?: InputMaybe<Scalars['String']['input']>;
	Email_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Email_like?: InputMaybe<Scalars['String']['input']>;
	Email_ne?: InputMaybe<Scalars['String']['input']>;
	Email_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Email_notnull?: InputMaybe<Scalars['String']['input']>;
	Email_null?: InputMaybe<Scalars['String']['input']>;
	Employee?: InputMaybe<EmployeesListFilter>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	Fax_ilike?: InputMaybe<Scalars['String']['input']>;
	Fax_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Fax_like?: InputMaybe<Scalars['String']['input']>;
	Fax_ne?: InputMaybe<Scalars['String']['input']>;
	Fax_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Fax_notnull?: InputMaybe<Scalars['String']['input']>;
	Fax_null?: InputMaybe<Scalars['String']['input']>;
	FirstName?: InputMaybe<Scalars['String']['input']>;
	FirstName_ilike?: InputMaybe<Scalars['String']['input']>;
	FirstName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	FirstName_like?: InputMaybe<Scalars['String']['input']>;
	FirstName_ne?: InputMaybe<Scalars['String']['input']>;
	FirstName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	FirstName_notnull?: InputMaybe<Scalars['String']['input']>;
	FirstName_null?: InputMaybe<Scalars['String']['input']>;
	Invoices?: InputMaybe<InvoicesListFilter>;
	LastName?: InputMaybe<Scalars['String']['input']>;
	LastName_ilike?: InputMaybe<Scalars['String']['input']>;
	LastName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	LastName_like?: InputMaybe<Scalars['String']['input']>;
	LastName_ne?: InputMaybe<Scalars['String']['input']>;
	LastName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	LastName_notnull?: InputMaybe<Scalars['String']['input']>;
	LastName_null?: InputMaybe<Scalars['String']['input']>;
	Phone?: InputMaybe<Scalars['String']['input']>;
	Phone_ilike?: InputMaybe<Scalars['String']['input']>;
	Phone_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Phone_like?: InputMaybe<Scalars['String']['input']>;
	Phone_ne?: InputMaybe<Scalars['String']['input']>;
	Phone_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Phone_notnull?: InputMaybe<Scalars['String']['input']>;
	Phone_null?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	PostalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	PostalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	PostalCode_like?: InputMaybe<Scalars['String']['input']>;
	PostalCode_ne?: InputMaybe<Scalars['String']['input']>;
	PostalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	PostalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	PostalCode_null?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
	State_ilike?: InputMaybe<Scalars['String']['input']>;
	State_in?: InputMaybe<Array<Scalars['String']['input']>>;
	State_like?: InputMaybe<Scalars['String']['input']>;
	State_ne?: InputMaybe<Scalars['String']['input']>;
	State_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	State_notnull?: InputMaybe<Scalars['String']['input']>;
	State_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<CustomersListFilter>>;
	_not?: InputMaybe<CustomersListFilter>;
	_or?: InputMaybe<Array<CustomersListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type CustomersOrderByInput = {
	Address?: InputMaybe<Sort>;
	City?: InputMaybe<Sort>;
	Company?: InputMaybe<Sort>;
	Country?: InputMaybe<Sort>;
	Email?: InputMaybe<Sort>;
	Fax?: InputMaybe<Sort>;
	FirstName?: InputMaybe<Sort>;
	Invoices?: InputMaybe<Sort>;
	LastName?: InputMaybe<Sort>;
	Phone?: InputMaybe<Sort>;
	PostalCode?: InputMaybe<Sort>;
	State?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type CustomersPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<CustomersOrderByInput>;
};

export type CustomersUpdateManyInput = {
	data: Array<CustomerCreateOrUpdateInput>;
};

export type Employee = {
	__typename?: 'Employee';
	Address?: Maybe<Scalars['String']['output']>;
	BirthDate?: Maybe<Scalars['ISOString']['output']>;
	City?: Maybe<Scalars['String']['output']>;
	Country?: Maybe<Scalars['String']['output']>;
	Customers?: Maybe<Array<Customer>>;
	Email?: Maybe<Scalars['String']['output']>;
	Employee?: Maybe<Employee>;
	Employees?: Maybe<Array<Employee>>;
	Fax?: Maybe<Scalars['String']['output']>;
	FirstName: Scalars['String']['output'];
	HireDate?: Maybe<Scalars['ISOString']['output']>;
	LastName: Scalars['String']['output'];
	Phone?: Maybe<Scalars['String']['output']>;
	PostalCode?: Maybe<Scalars['String']['output']>;
	State?: Maybe<Scalars['String']['output']>;
	Title?: Maybe<Scalars['String']['output']>;
	id: Scalars['ID']['output'];
};

export type EmployeeCreateOrUpdateInput = {
	Address?: InputMaybe<Scalars['String']['input']>;
	BirthDate?: InputMaybe<Scalars['ISOString']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Customers?: InputMaybe<Array<CustomerCreateOrUpdateInput>>;
	Email?: InputMaybe<Scalars['String']['input']>;
	Employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	Employees?: InputMaybe<Array<EmployeeCreateOrUpdateInput>>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	FirstName?: InputMaybe<Scalars['String']['input']>;
	HireDate?: InputMaybe<Scalars['ISOString']['input']>;
	LastName?: InputMaybe<Scalars['String']['input']>;
	Phone?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
	Title?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type EmployeeInsertInput = {
	Address?: InputMaybe<Scalars['String']['input']>;
	BirthDate?: InputMaybe<Scalars['ISOString']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Customers?: InputMaybe<Array<CustomerCreateOrUpdateInput>>;
	Email?: InputMaybe<Scalars['String']['input']>;
	Employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	Employees?: InputMaybe<Array<EmployeeCreateOrUpdateInput>>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	FirstName: Scalars['String']['input'];
	HireDate?: InputMaybe<Scalars['ISOString']['input']>;
	LastName: Scalars['String']['input'];
	Phone?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
	Title?: InputMaybe<Scalars['String']['input']>;
};

export type EmployeesCreateOrUpdateManyInput = {
	data: Array<EmployeeCreateOrUpdateInput>;
};

export type EmployeesInsertManyInput = {
	data: Array<EmployeeInsertInput>;
};

export type EmployeesListFilter = {
	Address?: InputMaybe<Scalars['String']['input']>;
	Address_ilike?: InputMaybe<Scalars['String']['input']>;
	Address_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Address_like?: InputMaybe<Scalars['String']['input']>;
	Address_ne?: InputMaybe<Scalars['String']['input']>;
	Address_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Address_notnull?: InputMaybe<Scalars['String']['input']>;
	Address_null?: InputMaybe<Scalars['String']['input']>;
	BirthDate?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	BirthDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	BirthDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	BirthDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	City?: InputMaybe<Scalars['String']['input']>;
	City_ilike?: InputMaybe<Scalars['String']['input']>;
	City_in?: InputMaybe<Array<Scalars['String']['input']>>;
	City_like?: InputMaybe<Scalars['String']['input']>;
	City_ne?: InputMaybe<Scalars['String']['input']>;
	City_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	City_notnull?: InputMaybe<Scalars['String']['input']>;
	City_null?: InputMaybe<Scalars['String']['input']>;
	Country?: InputMaybe<Scalars['String']['input']>;
	Country_ilike?: InputMaybe<Scalars['String']['input']>;
	Country_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Country_like?: InputMaybe<Scalars['String']['input']>;
	Country_ne?: InputMaybe<Scalars['String']['input']>;
	Country_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Country_notnull?: InputMaybe<Scalars['String']['input']>;
	Country_null?: InputMaybe<Scalars['String']['input']>;
	Customers?: InputMaybe<CustomersListFilter>;
	Email?: InputMaybe<Scalars['String']['input']>;
	Email_ilike?: InputMaybe<Scalars['String']['input']>;
	Email_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Email_like?: InputMaybe<Scalars['String']['input']>;
	Email_ne?: InputMaybe<Scalars['String']['input']>;
	Email_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Email_notnull?: InputMaybe<Scalars['String']['input']>;
	Email_null?: InputMaybe<Scalars['String']['input']>;
	Employee?: InputMaybe<EmployeesListFilter>;
	Employees?: InputMaybe<EmployeesListFilter>;
	Fax?: InputMaybe<Scalars['String']['input']>;
	Fax_ilike?: InputMaybe<Scalars['String']['input']>;
	Fax_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Fax_like?: InputMaybe<Scalars['String']['input']>;
	Fax_ne?: InputMaybe<Scalars['String']['input']>;
	Fax_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Fax_notnull?: InputMaybe<Scalars['String']['input']>;
	Fax_null?: InputMaybe<Scalars['String']['input']>;
	FirstName?: InputMaybe<Scalars['String']['input']>;
	FirstName_ilike?: InputMaybe<Scalars['String']['input']>;
	FirstName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	FirstName_like?: InputMaybe<Scalars['String']['input']>;
	FirstName_ne?: InputMaybe<Scalars['String']['input']>;
	FirstName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	FirstName_notnull?: InputMaybe<Scalars['String']['input']>;
	FirstName_null?: InputMaybe<Scalars['String']['input']>;
	HireDate?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	HireDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	HireDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	HireDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	LastName?: InputMaybe<Scalars['String']['input']>;
	LastName_ilike?: InputMaybe<Scalars['String']['input']>;
	LastName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	LastName_like?: InputMaybe<Scalars['String']['input']>;
	LastName_ne?: InputMaybe<Scalars['String']['input']>;
	LastName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	LastName_notnull?: InputMaybe<Scalars['String']['input']>;
	LastName_null?: InputMaybe<Scalars['String']['input']>;
	Phone?: InputMaybe<Scalars['String']['input']>;
	Phone_ilike?: InputMaybe<Scalars['String']['input']>;
	Phone_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Phone_like?: InputMaybe<Scalars['String']['input']>;
	Phone_ne?: InputMaybe<Scalars['String']['input']>;
	Phone_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Phone_notnull?: InputMaybe<Scalars['String']['input']>;
	Phone_null?: InputMaybe<Scalars['String']['input']>;
	PostalCode?: InputMaybe<Scalars['String']['input']>;
	PostalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	PostalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	PostalCode_like?: InputMaybe<Scalars['String']['input']>;
	PostalCode_ne?: InputMaybe<Scalars['String']['input']>;
	PostalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	PostalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	PostalCode_null?: InputMaybe<Scalars['String']['input']>;
	State?: InputMaybe<Scalars['String']['input']>;
	State_ilike?: InputMaybe<Scalars['String']['input']>;
	State_in?: InputMaybe<Array<Scalars['String']['input']>>;
	State_like?: InputMaybe<Scalars['String']['input']>;
	State_ne?: InputMaybe<Scalars['String']['input']>;
	State_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	State_notnull?: InputMaybe<Scalars['String']['input']>;
	State_null?: InputMaybe<Scalars['String']['input']>;
	Title?: InputMaybe<Scalars['String']['input']>;
	Title_ilike?: InputMaybe<Scalars['String']['input']>;
	Title_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Title_like?: InputMaybe<Scalars['String']['input']>;
	Title_ne?: InputMaybe<Scalars['String']['input']>;
	Title_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Title_notnull?: InputMaybe<Scalars['String']['input']>;
	Title_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<EmployeesListFilter>>;
	_not?: InputMaybe<EmployeesListFilter>;
	_or?: InputMaybe<Array<EmployeesListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type EmployeesOrderByInput = {
	Address?: InputMaybe<Sort>;
	BirthDate?: InputMaybe<Sort>;
	City?: InputMaybe<Sort>;
	Country?: InputMaybe<Sort>;
	Customers?: InputMaybe<Sort>;
	Email?: InputMaybe<Sort>;
	Fax?: InputMaybe<Sort>;
	FirstName?: InputMaybe<Sort>;
	HireDate?: InputMaybe<Sort>;
	LastName?: InputMaybe<Sort>;
	Phone?: InputMaybe<Sort>;
	PostalCode?: InputMaybe<Sort>;
	State?: InputMaybe<Sort>;
	Title?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type EmployeesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<EmployeesOrderByInput>;
};

export type EmployeesUpdateManyInput = {
	data: Array<EmployeeCreateOrUpdateInput>;
};

export type Genre = {
	__typename?: 'Genre';
	Name?: Maybe<Scalars['String']['output']>;
	Tracks?: Maybe<Array<Track>>;
	id: Scalars['ID']['output'];
};

export type GenreCreateOrUpdateInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type GenreInsertInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type GenresCreateOrUpdateManyInput = {
	data: Array<GenreCreateOrUpdateInput>;
};

export type GenresInsertManyInput = {
	data: Array<GenreInsertInput>;
};

export type GenresListFilter = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Name_ilike?: InputMaybe<Scalars['String']['input']>;
	Name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_like?: InputMaybe<Scalars['String']['input']>;
	Name_ne?: InputMaybe<Scalars['String']['input']>;
	Name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_notnull?: InputMaybe<Scalars['String']['input']>;
	Name_null?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<TracksListFilter>;
	_and?: InputMaybe<Array<GenresListFilter>>;
	_not?: InputMaybe<GenresListFilter>;
	_or?: InputMaybe<Array<GenresListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type GenresOrderByInput = {
	Name?: InputMaybe<Sort>;
	Tracks?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type GenresPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<GenresOrderByInput>;
};

export type GenresUpdateManyInput = {
	data: Array<GenreCreateOrUpdateInput>;
};

export type Invoice = {
	__typename?: 'Invoice';
	BillingAddress?: Maybe<Scalars['String']['output']>;
	BillingCity?: Maybe<Scalars['String']['output']>;
	BillingCountry?: Maybe<Scalars['String']['output']>;
	BillingPostalCode?: Maybe<Scalars['String']['output']>;
	BillingState?: Maybe<Scalars['String']['output']>;
	Customer?: Maybe<Customer>;
	InvoiceDate: Scalars['ISOString']['output'];
	InvoiceLines?: Maybe<Array<InvoiceLine>>;
	Total: Scalars['String']['output'];
	id: Scalars['ID']['output'];
};

export type InvoiceCreateOrUpdateInput = {
	BillingAddress?: InputMaybe<Scalars['String']['input']>;
	BillingCity?: InputMaybe<Scalars['String']['input']>;
	BillingCountry?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode?: InputMaybe<Scalars['String']['input']>;
	BillingState?: InputMaybe<Scalars['String']['input']>;
	Customer?: InputMaybe<CustomerCreateOrUpdateInput>;
	InvoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	Total?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type InvoiceInsertInput = {
	BillingAddress?: InputMaybe<Scalars['String']['input']>;
	BillingCity?: InputMaybe<Scalars['String']['input']>;
	BillingCountry?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode?: InputMaybe<Scalars['String']['input']>;
	BillingState?: InputMaybe<Scalars['String']['input']>;
	Customer?: InputMaybe<CustomerCreateOrUpdateInput>;
	InvoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	Total: Scalars['String']['input'];
};

export type InvoiceLine = {
	__typename?: 'InvoiceLine';
	Invoice?: Maybe<Invoice>;
	Quantity: Scalars['Float']['output'];
	Track?: Maybe<Track>;
	UnitPrice: Scalars['String']['output'];
	id: Scalars['ID']['output'];
};

export type InvoiceLineCreateOrUpdateInput = {
	Invoice?: InputMaybe<InvoiceCreateOrUpdateInput>;
	Quantity?: InputMaybe<Scalars['Float']['input']>;
	Track?: InputMaybe<TrackCreateOrUpdateInput>;
	UnitPrice?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type InvoiceLineInsertInput = {
	Invoice?: InputMaybe<InvoiceCreateOrUpdateInput>;
	Quantity: Scalars['Float']['input'];
	Track?: InputMaybe<TrackCreateOrUpdateInput>;
	UnitPrice: Scalars['String']['input'];
};

export type InvoiceLinesCreateOrUpdateManyInput = {
	data: Array<InvoiceLineCreateOrUpdateInput>;
};

export type InvoiceLinesInsertManyInput = {
	data: Array<InvoiceLineInsertInput>;
};

export type InvoiceLinesListFilter = {
	Invoice?: InputMaybe<InvoicesListFilter>;
	Quantity?: InputMaybe<Scalars['Float']['input']>;
	Quantity_gt?: InputMaybe<Scalars['Float']['input']>;
	Quantity_gte?: InputMaybe<Scalars['Float']['input']>;
	Quantity_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	Quantity_lt?: InputMaybe<Scalars['Float']['input']>;
	Quantity_lte?: InputMaybe<Scalars['Float']['input']>;
	Quantity_ne?: InputMaybe<Scalars['Float']['input']>;
	Quantity_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	Quantity_notnull?: InputMaybe<Scalars['Float']['input']>;
	Quantity_null?: InputMaybe<Scalars['Float']['input']>;
	Track?: InputMaybe<TracksListFilter>;
	UnitPrice?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_ilike?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_in?: InputMaybe<Array<Scalars['String']['input']>>;
	UnitPrice_like?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_ne?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	UnitPrice_notnull?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<InvoiceLinesListFilter>>;
	_not?: InputMaybe<InvoiceLinesListFilter>;
	_or?: InputMaybe<Array<InvoiceLinesListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type InvoiceLinesOrderByInput = {
	Quantity?: InputMaybe<Sort>;
	Track?: InputMaybe<Sort>;
	UnitPrice?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type InvoiceLinesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<InvoiceLinesOrderByInput>;
};

export type InvoiceLinesUpdateManyInput = {
	data: Array<InvoiceLineCreateOrUpdateInput>;
};

export type InvoicesCreateOrUpdateManyInput = {
	data: Array<InvoiceCreateOrUpdateInput>;
};

export type InvoicesInsertManyInput = {
	data: Array<InvoiceInsertInput>;
};

export type InvoicesListFilter = {
	BillingAddress?: InputMaybe<Scalars['String']['input']>;
	BillingAddress_ilike?: InputMaybe<Scalars['String']['input']>;
	BillingAddress_in?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingAddress_like?: InputMaybe<Scalars['String']['input']>;
	BillingAddress_ne?: InputMaybe<Scalars['String']['input']>;
	BillingAddress_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingAddress_notnull?: InputMaybe<Scalars['String']['input']>;
	BillingAddress_null?: InputMaybe<Scalars['String']['input']>;
	BillingCity?: InputMaybe<Scalars['String']['input']>;
	BillingCity_ilike?: InputMaybe<Scalars['String']['input']>;
	BillingCity_in?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingCity_like?: InputMaybe<Scalars['String']['input']>;
	BillingCity_ne?: InputMaybe<Scalars['String']['input']>;
	BillingCity_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingCity_notnull?: InputMaybe<Scalars['String']['input']>;
	BillingCity_null?: InputMaybe<Scalars['String']['input']>;
	BillingCountry?: InputMaybe<Scalars['String']['input']>;
	BillingCountry_ilike?: InputMaybe<Scalars['String']['input']>;
	BillingCountry_in?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingCountry_like?: InputMaybe<Scalars['String']['input']>;
	BillingCountry_ne?: InputMaybe<Scalars['String']['input']>;
	BillingCountry_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingCountry_notnull?: InputMaybe<Scalars['String']['input']>;
	BillingCountry_null?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingPostalCode_like?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode_ne?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingPostalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	BillingPostalCode_null?: InputMaybe<Scalars['String']['input']>;
	BillingState?: InputMaybe<Scalars['String']['input']>;
	BillingState_ilike?: InputMaybe<Scalars['String']['input']>;
	BillingState_in?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingState_like?: InputMaybe<Scalars['String']['input']>;
	BillingState_ne?: InputMaybe<Scalars['String']['input']>;
	BillingState_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	BillingState_notnull?: InputMaybe<Scalars['String']['input']>;
	BillingState_null?: InputMaybe<Scalars['String']['input']>;
	Customer?: InputMaybe<CustomersListFilter>;
	InvoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	InvoiceDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	InvoiceDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	InvoiceLines?: InputMaybe<InvoiceLinesListFilter>;
	Total?: InputMaybe<Scalars['String']['input']>;
	Total_ilike?: InputMaybe<Scalars['String']['input']>;
	Total_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Total_like?: InputMaybe<Scalars['String']['input']>;
	Total_ne?: InputMaybe<Scalars['String']['input']>;
	Total_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Total_notnull?: InputMaybe<Scalars['String']['input']>;
	Total_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<InvoicesListFilter>>;
	_not?: InputMaybe<InvoicesListFilter>;
	_or?: InputMaybe<Array<InvoicesListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type InvoicesOrderByInput = {
	BillingAddress?: InputMaybe<Sort>;
	BillingCity?: InputMaybe<Sort>;
	BillingCountry?: InputMaybe<Sort>;
	BillingPostalCode?: InputMaybe<Sort>;
	BillingState?: InputMaybe<Sort>;
	InvoiceDate?: InputMaybe<Sort>;
	InvoiceLines?: InputMaybe<Sort>;
	Total?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type InvoicesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<InvoicesOrderByInput>;
};

export type InvoicesUpdateManyInput = {
	data: Array<InvoiceCreateOrUpdateInput>;
};

export type MediaType = {
	__typename?: 'MediaType';
	Name?: Maybe<Scalars['String']['output']>;
	Tracks?: Maybe<Array<Track>>;
	id: Scalars['ID']['output'];
};

export type MediaTypeCreateOrUpdateInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type MediaTypeInsertInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type MediaTypesCreateOrUpdateManyInput = {
	data: Array<MediaTypeCreateOrUpdateInput>;
};

export type MediaTypesInsertManyInput = {
	data: Array<MediaTypeInsertInput>;
};

export type MediaTypesListFilter = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Name_ilike?: InputMaybe<Scalars['String']['input']>;
	Name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_like?: InputMaybe<Scalars['String']['input']>;
	Name_ne?: InputMaybe<Scalars['String']['input']>;
	Name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_notnull?: InputMaybe<Scalars['String']['input']>;
	Name_null?: InputMaybe<Scalars['String']['input']>;
	Tracks?: InputMaybe<TracksListFilter>;
	_and?: InputMaybe<Array<MediaTypesListFilter>>;
	_not?: InputMaybe<MediaTypesListFilter>;
	_or?: InputMaybe<Array<MediaTypesListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type MediaTypesOrderByInput = {
	Name?: InputMaybe<Sort>;
	Tracks?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type MediaTypesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<MediaTypesOrderByInput>;
};

export type MediaTypesUpdateManyInput = {
	data: Array<MediaTypeCreateOrUpdateInput>;
};

export type Mutation = {
	__typename?: 'Mutation';
	createAlbum: Album;
	createAlbums: Array<Album>;
	createArtist: Artist;
	createArtists: Array<Artist>;
	createCustomer: Customer;
	createCustomers: Array<Customer>;
	createEmployee: Employee;
	createEmployees: Array<Employee>;
	createGenre: Genre;
	createGenres: Array<Genre>;
	createInvoice: Invoice;
	createInvoiceLine: InvoiceLine;
	createInvoiceLines: Array<InvoiceLine>;
	createInvoices: Array<Invoice>;
	createMediaType: MediaType;
	createMediaTypes: Array<MediaType>;
	createOrUpdateAlbums: Array<Album>;
	createOrUpdateArtists: Array<Artist>;
	createOrUpdateCustomers: Array<Customer>;
	createOrUpdateEmployees: Array<Employee>;
	createOrUpdateGenres: Array<Genre>;
	createOrUpdateInvoiceLines: Array<InvoiceLine>;
	createOrUpdateInvoices: Array<Invoice>;
	createOrUpdateMediaTypes: Array<MediaType>;
	createOrUpdatePlaylists: Array<Playlist>;
	createOrUpdateTracks: Array<Track>;
	createPlaylist: Playlist;
	createPlaylists: Array<Playlist>;
	createTrack: Track;
	createTracks: Array<Track>;
	deleteAlbum: Scalars['Boolean']['output'];
	deleteArtist: Scalars['Boolean']['output'];
	deleteCustomer: Scalars['Boolean']['output'];
	deleteEmployee: Scalars['Boolean']['output'];
	deleteGenre: Scalars['Boolean']['output'];
	deleteInvoice: Scalars['Boolean']['output'];
	deleteInvoiceLine: Scalars['Boolean']['output'];
	deleteMediaType: Scalars['Boolean']['output'];
	deletePlaylist: Scalars['Boolean']['output'];
	deleteTrack: Scalars['Boolean']['output'];
	updateAlbum: Album;
	updateAlbums: Array<Album>;
	updateArtist: Artist;
	updateArtists: Array<Artist>;
	updateCustomer: Customer;
	updateCustomers: Array<Customer>;
	updateEmployee: Employee;
	updateEmployees: Array<Employee>;
	updateGenre: Genre;
	updateGenres: Array<Genre>;
	updateInvoice: Invoice;
	updateInvoiceLine: InvoiceLine;
	updateInvoiceLines: Array<InvoiceLine>;
	updateInvoices: Array<Invoice>;
	updateMediaType: MediaType;
	updateMediaTypes: Array<MediaType>;
	updatePlaylist: Playlist;
	updatePlaylists: Array<Playlist>;
	updateTrack: Track;
	updateTracks: Array<Track>;
};

export type MutationCreateAlbumArgs = {
	data: AlbumInsertInput;
};

export type MutationCreateAlbumsArgs = {
	input: AlbumsInsertManyInput;
};

export type MutationCreateArtistArgs = {
	data: ArtistInsertInput;
};

export type MutationCreateArtistsArgs = {
	input: ArtistsInsertManyInput;
};

export type MutationCreateCustomerArgs = {
	data: CustomerInsertInput;
};

export type MutationCreateCustomersArgs = {
	input: CustomersInsertManyInput;
};

export type MutationCreateEmployeeArgs = {
	data: EmployeeInsertInput;
};

export type MutationCreateEmployeesArgs = {
	input: EmployeesInsertManyInput;
};

export type MutationCreateGenreArgs = {
	data: GenreInsertInput;
};

export type MutationCreateGenresArgs = {
	input: GenresInsertManyInput;
};

export type MutationCreateInvoiceArgs = {
	data: InvoiceInsertInput;
};

export type MutationCreateInvoiceLineArgs = {
	data: InvoiceLineInsertInput;
};

export type MutationCreateInvoiceLinesArgs = {
	input: InvoiceLinesInsertManyInput;
};

export type MutationCreateInvoicesArgs = {
	input: InvoicesInsertManyInput;
};

export type MutationCreateMediaTypeArgs = {
	data: MediaTypeInsertInput;
};

export type MutationCreateMediaTypesArgs = {
	input: MediaTypesInsertManyInput;
};

export type MutationCreateOrUpdateAlbumsArgs = {
	input: AlbumsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateArtistsArgs = {
	input: ArtistsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateCustomersArgs = {
	input: CustomersCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateEmployeesArgs = {
	input: EmployeesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateGenresArgs = {
	input: GenresCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateInvoiceLinesArgs = {
	input: InvoiceLinesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateInvoicesArgs = {
	input: InvoicesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateMediaTypesArgs = {
	input: MediaTypesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdatePlaylistsArgs = {
	input: PlaylistsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateTracksArgs = {
	input: TracksCreateOrUpdateManyInput;
};

export type MutationCreatePlaylistArgs = {
	data: PlaylistInsertInput;
};

export type MutationCreatePlaylistsArgs = {
	input: PlaylistsInsertManyInput;
};

export type MutationCreateTrackArgs = {
	data: TrackInsertInput;
};

export type MutationCreateTracksArgs = {
	input: TracksInsertManyInput;
};

export type MutationDeleteAlbumArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteArtistArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteCustomerArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteEmployeeArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteGenreArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteInvoiceArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteInvoiceLineArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteMediaTypeArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeletePlaylistArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteTrackArgs = {
	id: Scalars['ID']['input'];
};

export type MutationUpdateAlbumArgs = {
	data: AlbumCreateOrUpdateInput;
};

export type MutationUpdateAlbumsArgs = {
	input: AlbumsUpdateManyInput;
};

export type MutationUpdateArtistArgs = {
	data: ArtistCreateOrUpdateInput;
};

export type MutationUpdateArtistsArgs = {
	input: ArtistsUpdateManyInput;
};

export type MutationUpdateCustomerArgs = {
	data: CustomerCreateOrUpdateInput;
};

export type MutationUpdateCustomersArgs = {
	input: CustomersUpdateManyInput;
};

export type MutationUpdateEmployeeArgs = {
	data: EmployeeCreateOrUpdateInput;
};

export type MutationUpdateEmployeesArgs = {
	input: EmployeesUpdateManyInput;
};

export type MutationUpdateGenreArgs = {
	data: GenreCreateOrUpdateInput;
};

export type MutationUpdateGenresArgs = {
	input: GenresUpdateManyInput;
};

export type MutationUpdateInvoiceArgs = {
	data: InvoiceCreateOrUpdateInput;
};

export type MutationUpdateInvoiceLineArgs = {
	data: InvoiceLineCreateOrUpdateInput;
};

export type MutationUpdateInvoiceLinesArgs = {
	input: InvoiceLinesUpdateManyInput;
};

export type MutationUpdateInvoicesArgs = {
	input: InvoicesUpdateManyInput;
};

export type MutationUpdateMediaTypeArgs = {
	data: MediaTypeCreateOrUpdateInput;
};

export type MutationUpdateMediaTypesArgs = {
	input: MediaTypesUpdateManyInput;
};

export type MutationUpdatePlaylistArgs = {
	data: PlaylistCreateOrUpdateInput;
};

export type MutationUpdatePlaylistsArgs = {
	input: PlaylistsUpdateManyInput;
};

export type MutationUpdateTrackArgs = {
	data: TrackCreateOrUpdateInput;
};

export type MutationUpdateTracksArgs = {
	input: TracksUpdateManyInput;
};

export type Playlist = {
	__typename?: 'Playlist';
	Name?: Maybe<Scalars['String']['output']>;
	PlaylistTrack?: Maybe<Array<Track>>;
	id: Scalars['ID']['output'];
};

export type PlaylistCreateOrUpdateInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	PlaylistTrack?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type PlaylistInsertInput = {
	Name?: InputMaybe<Scalars['String']['input']>;
	PlaylistTrack?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type PlaylistsCreateOrUpdateManyInput = {
	data: Array<PlaylistCreateOrUpdateInput>;
};

export type PlaylistsInsertManyInput = {
	data: Array<PlaylistInsertInput>;
};

export type PlaylistsListFilter = {
	Name?: InputMaybe<Scalars['String']['input']>;
	Name_ilike?: InputMaybe<Scalars['String']['input']>;
	Name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_like?: InputMaybe<Scalars['String']['input']>;
	Name_ne?: InputMaybe<Scalars['String']['input']>;
	Name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_notnull?: InputMaybe<Scalars['String']['input']>;
	Name_null?: InputMaybe<Scalars['String']['input']>;
	PlaylistTrack?: InputMaybe<TracksListFilter>;
	_and?: InputMaybe<Array<PlaylistsListFilter>>;
	_not?: InputMaybe<PlaylistsListFilter>;
	_or?: InputMaybe<Array<PlaylistsListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type PlaylistsOrderByInput = {
	Name?: InputMaybe<Sort>;
	PlaylistTrack?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type PlaylistsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<PlaylistsOrderByInput>;
};

export type PlaylistsUpdateManyInput = {
	data: Array<PlaylistCreateOrUpdateInput>;
};

export type Query = {
	__typename?: 'Query';
	_graphweaver: AdminUiMetadata;
	album?: Maybe<Album>;
	albums: Array<Album>;
	artist?: Maybe<Artist>;
	artists: Array<Artist>;
	customer?: Maybe<Customer>;
	customers: Array<Customer>;
	employee?: Maybe<Employee>;
	employees: Array<Employee>;
	genre?: Maybe<Genre>;
	genres: Array<Genre>;
	invoice?: Maybe<Invoice>;
	invoiceLine?: Maybe<InvoiceLine>;
	invoiceLines: Array<InvoiceLine>;
	invoices: Array<Invoice>;
	mediaType?: Maybe<MediaType>;
	mediaTypes: Array<MediaType>;
	playlist?: Maybe<Playlist>;
	playlists: Array<Playlist>;
	track?: Maybe<Track>;
	tracks: Array<Track>;
};

export type QueryAlbumArgs = {
	id: Scalars['ID']['input'];
};

export type QueryAlbumsArgs = {
	filter?: InputMaybe<AlbumsListFilter>;
	pagination?: InputMaybe<AlbumsPaginationInput>;
};

export type QueryArtistArgs = {
	id: Scalars['ID']['input'];
};

export type QueryArtistsArgs = {
	filter?: InputMaybe<ArtistsListFilter>;
	pagination?: InputMaybe<ArtistsPaginationInput>;
};

export type QueryCustomerArgs = {
	id: Scalars['ID']['input'];
};

export type QueryCustomersArgs = {
	filter?: InputMaybe<CustomersListFilter>;
	pagination?: InputMaybe<CustomersPaginationInput>;
};

export type QueryEmployeeArgs = {
	id: Scalars['ID']['input'];
};

export type QueryEmployeesArgs = {
	filter?: InputMaybe<EmployeesListFilter>;
	pagination?: InputMaybe<EmployeesPaginationInput>;
};

export type QueryGenreArgs = {
	id: Scalars['ID']['input'];
};

export type QueryGenresArgs = {
	filter?: InputMaybe<GenresListFilter>;
	pagination?: InputMaybe<GenresPaginationInput>;
};

export type QueryInvoiceArgs = {
	id: Scalars['ID']['input'];
};

export type QueryInvoiceLineArgs = {
	id: Scalars['ID']['input'];
};

export type QueryInvoiceLinesArgs = {
	filter?: InputMaybe<InvoiceLinesListFilter>;
	pagination?: InputMaybe<InvoiceLinesPaginationInput>;
};

export type QueryInvoicesArgs = {
	filter?: InputMaybe<InvoicesListFilter>;
	pagination?: InputMaybe<InvoicesPaginationInput>;
};

export type QueryMediaTypeArgs = {
	id: Scalars['ID']['input'];
};

export type QueryMediaTypesArgs = {
	filter?: InputMaybe<MediaTypesListFilter>;
	pagination?: InputMaybe<MediaTypesPaginationInput>;
};

export type QueryPlaylistArgs = {
	id: Scalars['ID']['input'];
};

export type QueryPlaylistsArgs = {
	filter?: InputMaybe<PlaylistsListFilter>;
	pagination?: InputMaybe<PlaylistsPaginationInput>;
};

export type QueryTrackArgs = {
	id: Scalars['ID']['input'];
};

export type QueryTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
	pagination?: InputMaybe<TracksPaginationInput>;
};

export enum Sort {
	Asc = 'ASC',
	Desc = 'DESC',
}

export type Track = {
	__typename?: 'Track';
	Album?: Maybe<Album>;
	Bytes?: Maybe<Scalars['Float']['output']>;
	Composer?: Maybe<Scalars['String']['output']>;
	Genre?: Maybe<Genre>;
	InvoiceLines?: Maybe<Array<InvoiceLine>>;
	MediaType?: Maybe<MediaType>;
	Milliseconds: Scalars['Float']['output'];
	Name: Scalars['String']['output'];
	Playlists?: Maybe<Array<Playlist>>;
	UnitPrice: Scalars['String']['output'];
	id: Scalars['ID']['output'];
};

export type TrackCreateOrUpdateInput = {
	Album?: InputMaybe<AlbumCreateOrUpdateInput>;
	Bytes?: InputMaybe<Scalars['Float']['input']>;
	Composer?: InputMaybe<Scalars['String']['input']>;
	Genre?: InputMaybe<GenreCreateOrUpdateInput>;
	InvoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	MediaType?: InputMaybe<MediaTypeCreateOrUpdateInput>;
	Milliseconds?: InputMaybe<Scalars['Float']['input']>;
	Name?: InputMaybe<Scalars['String']['input']>;
	Playlists?: InputMaybe<Array<PlaylistCreateOrUpdateInput>>;
	UnitPrice?: InputMaybe<Scalars['String']['input']>;
	id?: InputMaybe<Scalars['ID']['input']>;
};

export type TrackInsertInput = {
	Album?: InputMaybe<AlbumCreateOrUpdateInput>;
	Bytes?: InputMaybe<Scalars['Float']['input']>;
	Composer?: InputMaybe<Scalars['String']['input']>;
	Genre?: InputMaybe<GenreCreateOrUpdateInput>;
	InvoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	MediaType?: InputMaybe<MediaTypeCreateOrUpdateInput>;
	Milliseconds: Scalars['Float']['input'];
	Name: Scalars['String']['input'];
	Playlists?: InputMaybe<Array<PlaylistCreateOrUpdateInput>>;
	UnitPrice: Scalars['String']['input'];
};

export type TracksCreateOrUpdateManyInput = {
	data: Array<TrackCreateOrUpdateInput>;
};

export type TracksInsertManyInput = {
	data: Array<TrackInsertInput>;
};

export type TracksListFilter = {
	Album?: InputMaybe<AlbumsListFilter>;
	Bytes?: InputMaybe<Scalars['Float']['input']>;
	Bytes_gt?: InputMaybe<Scalars['Float']['input']>;
	Bytes_gte?: InputMaybe<Scalars['Float']['input']>;
	Bytes_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	Bytes_lt?: InputMaybe<Scalars['Float']['input']>;
	Bytes_lte?: InputMaybe<Scalars['Float']['input']>;
	Bytes_ne?: InputMaybe<Scalars['Float']['input']>;
	Bytes_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	Bytes_notnull?: InputMaybe<Scalars['Float']['input']>;
	Bytes_null?: InputMaybe<Scalars['Float']['input']>;
	Composer?: InputMaybe<Scalars['String']['input']>;
	Composer_ilike?: InputMaybe<Scalars['String']['input']>;
	Composer_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Composer_like?: InputMaybe<Scalars['String']['input']>;
	Composer_ne?: InputMaybe<Scalars['String']['input']>;
	Composer_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Composer_notnull?: InputMaybe<Scalars['String']['input']>;
	Composer_null?: InputMaybe<Scalars['String']['input']>;
	Genre?: InputMaybe<GenresListFilter>;
	InvoiceLines?: InputMaybe<InvoiceLinesListFilter>;
	MediaType?: InputMaybe<MediaTypesListFilter>;
	Milliseconds?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_gt?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_gte?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	Milliseconds_lt?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_lte?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_ne?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	Milliseconds_notnull?: InputMaybe<Scalars['Float']['input']>;
	Milliseconds_null?: InputMaybe<Scalars['Float']['input']>;
	Name?: InputMaybe<Scalars['String']['input']>;
	Name_ilike?: InputMaybe<Scalars['String']['input']>;
	Name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_like?: InputMaybe<Scalars['String']['input']>;
	Name_ne?: InputMaybe<Scalars['String']['input']>;
	Name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	Name_notnull?: InputMaybe<Scalars['String']['input']>;
	Name_null?: InputMaybe<Scalars['String']['input']>;
	Playlists?: InputMaybe<PlaylistsListFilter>;
	UnitPrice?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_ilike?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_in?: InputMaybe<Array<Scalars['String']['input']>>;
	UnitPrice_like?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_ne?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	UnitPrice_notnull?: InputMaybe<Scalars['String']['input']>;
	UnitPrice_null?: InputMaybe<Scalars['String']['input']>;
	_and?: InputMaybe<Array<TracksListFilter>>;
	_not?: InputMaybe<TracksListFilter>;
	_or?: InputMaybe<Array<TracksListFilter>>;
	id?: InputMaybe<Scalars['ID']['input']>;
	id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_ne?: InputMaybe<Scalars['ID']['input']>;
	id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	id_notnull?: InputMaybe<Scalars['ID']['input']>;
	id_null?: InputMaybe<Scalars['ID']['input']>;
};

export type TracksOrderByInput = {
	Album?: InputMaybe<Sort>;
	Bytes?: InputMaybe<Sort>;
	Composer?: InputMaybe<Sort>;
	Milliseconds?: InputMaybe<Sort>;
	Name?: InputMaybe<Sort>;
	UnitPrice?: InputMaybe<Sort>;
	id?: InputMaybe<Sort>;
};

export type TracksPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<TracksOrderByInput>;
};

export type TracksUpdateManyInput = {
	data: Array<TrackCreateOrUpdateInput>;
};
