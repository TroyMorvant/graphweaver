import { BaseDataEntity } from '@exogee/graphweaver';

export enum AuthProvider {
	LOCAL = 'LOCAL',
}

export interface UserProfile extends BaseDataEntity {
	provider: AuthProvider;
	id: string; // A unique identifier for the user, as generated by the service provider.
	displayName: string; //The name of this user, suitable for display.
	name: {
		familyName?: string; // The family name of this user, or "last name" in most Western languages.
		givenName?: string; // The given name of this user, or "first name" in most Western languages.
		middleName?: string; // The middle name of this user.
	};
	email: string; // This users email address
	roles: string[]; // The roles assigned to this user.
}

export interface AuthToken extends BaseDataEntity {
	authToken: string;
	idToken?: string;
	refreshToken?: string;
}

export interface BaseAuthProvider {
	login?: (username: string, password: string) => Promise<UserProfile>;
	logout?: (authToken: string) => Promise<boolean>;
	generateAuthToken?: (user: UserProfile) => Promise<AuthToken>;
	refreshAuthToken?: (refreshToken: string) => Promise<AuthToken>;
	verifyAuthToken: (authToken: string) => Promise<boolean>;
}
